name: develop

on:
  push:
    branches:
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.40

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Unit Tests
        run: go test --short -coverprofile=cover.out -v ./...

      - name: Check Coverage
        run: go tool cover -func=cover.out

  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test

    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build Binary
        run: go build -ldflags="-w -s" -v -o app ./cmd/main.go
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: last-built-binary
          path: |
            app
            configs
          retention-days: 7

  multistage-docker:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -f build/Dockerfile.multi -t ghcr.io/mebr0/squirrel-bot .

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: last-built-binary

      - name: Change permission
        run: chmod +x app

      - name: Build Docker Image
        run: docker build -f build/Dockerfile -t ghcr.io/mebr0/squirrel-bot:develop .

      - name: Login
        run: echo $TOKEN | docker login ghcr.io -u $USER --password-stdin
        env:
          USER: ${{ secrets.USER }}
          TOKEN: ${{ secrets.TOKEN }}

      - name: Push Docker Image
        run: docker push ghcr.io/mebr0/squirrel-bot:develop
